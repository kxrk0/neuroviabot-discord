name: 🚀 Deploy NeuroViaBot to VPS

# Bu iş akışı ne zaman çalışacak?
on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    # Bu işlerin çalışacağı sanal makine
    runs-on: ubuntu-latest

    steps:
      # 1. Adım: Kodu GitHub Actions makinesine indir
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2. Adım: Node.js kurulumu
      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # ==========================================
      # BOT BUILD
      # ==========================================
      - name: 🤖 Temiz node_modules (Bot)
        run: |
          rm -rf node_modules
          echo "Bot node_modules klasörü silindi."

      - name: 🤖 Install dependencies (Bot)
        run: npm ci --omit=dev

      - name: 📦 Archive Bot
        run: |
          tar --exclude='frontend' --exclude='backend' --exclude='.git' --exclude='node_modules' -czvf bot.tar.gz . || {
            code=$?
            echo "Uyarı: tar arşivleme sırasında dosya değişti (kod: $code), bu genellikle önemsizdir.";
            exit 0;
          }

      # ==========================================
      # FRONTEND BUILD  
      # ==========================================
      - name: 🌐 Temiz node_modules (Frontend)
        run: |
          cd frontend
          rm -rf node_modules .next
          echo "Frontend node_modules ve .next klasörleri silindi."
          cd ..

      - name: 🌐 Install dependencies (Frontend)
        run: |
          cd frontend
          npm ci
          cd ..

      - name: 🌐 Build Frontend
        env:
          NEXT_PUBLIC_API_URL: https://neuroviabot.xyz
          NEXT_PUBLIC_BOT_CLIENT_ID: ${{ secrets.DISCORD_CLIENT_ID }}
          NODE_ENV: production
        run: |
          cd frontend
          npm run build
          cd ..

      - name: 📦 Archive Frontend
        run: |
          tar --exclude='node_modules' --exclude='.next/cache' -czvf frontend.tar.gz -C frontend . || {
            code=$?
            echo "Uyarı: tar arşivleme sırasında dosya değişti (kod: $code), bu genellikle önemsizdir.";
            exit 0;
          }

      # ==========================================
      # BACKEND BUILD
      # ==========================================
      - name: ⚙️ Temiz node_modules (Backend)
        run: |
          cd backend
          rm -rf node_modules
          echo "Backend node_modules klasörü silindi."
          cd ..

      - name: ⚙️ Install dependencies (Backend)
        run: |
          cd backend
          npm ci --omit=dev
          cd ..

      - name: 📦 Archive Backend
        run: tar --exclude='node_modules' -czvf backend.tar.gz -C backend .

      # ==========================================
      # UPLOAD TO VPS
      # ==========================================
      - name: 🚀 Copy archives to VPS
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: 22
          source: "bot.tar.gz,frontend.tar.gz,backend.tar.gz"
          target: "/root"
          strip_components: 0

      # ==========================================
      # DEPLOY ON VPS
      # ==========================================
      - name: 🎯 Deploy to VPS via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: 22
          script: |
            set -e
            
            # Ana dizini oluştur
            mkdir -p /root/neuroviabot/bot
            
            # Eski dosyaları backup al
            if [ -d "/root/neuroviabot/bot" ]; then
              echo "📦 Mevcut dosyalar backup alınıyor..."
              cp -r /root/neuroviabot/bot /root/neuroviabot/bot-backup-$(date +%Y%m%d-%H%M%S) || true
            fi

            # Bot arşivini çıkar
            echo "🤖 Bot deploy ediliyor..."
            tar -xzvf /root/bot.tar.gz -C /root/neuroviabot/bot

            # Frontend dizini oluştur ve arşivi çıkar
            echo "🌐 Frontend deploy ediliyor..."
            mkdir -p /root/neuroviabot/bot/frontend
            tar -xzvf /root/frontend.tar.gz -C /root/neuroviabot/bot/frontend

            # Backend dizini oluştur ve arşivi çıkar
            echo "⚙️ Backend deploy ediliyor..."
            mkdir -p /root/neuroviabot/bot/backend
            tar -xzvf /root/backend.tar.gz -C /root/neuroviabot/bot/backend

            # Bot bağımlılıklarını kur
            echo "📦 Bot bağımlılıkları kuruluyor..."
            cd /root/neuroviabot/bot
            npm ci --omit=dev

            # Frontend bağımlılıklarını kur
            echo "📦 Frontend production bağımlılıkları kuruluyor..."
            cd /root/neuroviabot/bot/frontend
            npm ci --omit=dev

            # Backend bağımlılıklarını kur
            echo "📦 Backend production bağımlılıkları kuruluyor..."
            cd /root/neuroviabot/bot/backend
            npm ci --omit=dev

            # PM2 ile servisleri yeniden başlat
            echo "🔄 PM2 servisleri yeniden başlatılıyor..."
            
            # Bot servisi
            echo "🤖 Bot servisi başlatılıyor..."
            pm2 stop neuroviabot || true
            pm2 delete neuroviabot || true
            cd /root/neuroviabot/bot
            pm2 start index.js --name "neuroviabot"
            
            # Frontend servisi (Next.js)
            echo "🌐 Frontend servisi başlatılıyor..."
            pm2 stop neuroviabot-frontend || true
            pm2 delete neuroviabot-frontend || true
            cd /root/neuroviabot/bot/frontend
            pm2 start npm --name "neuroviabot-frontend" -- start
            
            # Backend servisi (Express.js)
            echo "⚙️ Backend servisi başlatılıyor..."
            pm2 stop neuroviabot-backend || true
            pm2 delete neuroviabot-backend || true
            cd /root/neuroviabot/bot/backend
            pm2 start npm --name "neuroviabot-backend" -- start

            # Servisleri kaydet
            pm2 save
            pm2 status

            # Health check
            echo "🏥 Sistem durumu kontrol ediliyor..."
            sleep 5
            
            # Frontend health check (Next.js Port 3001)
            echo "🔍 Frontend health check..."
            curl -I http://localhost:3001 && echo "✅ Frontend erişilebilir" || echo "❌ Frontend erişilemiyor"
            
            # Backend health check (Express.js Port 5000)
            echo "🔍 Backend health check..."
            curl -I http://localhost:5000/api/health || curl -I http://localhost:5000 && echo "✅ Backend erişilebilir" || echo "❌ Backend erişilemiyor"
            
            # Caddy proxy health check
            echo "🔍 Caddy proxy health check..."
            curl -I http://localhost:80 && echo "✅ Caddy proxy çalışıyor" || echo "❌ Caddy proxy çalışmıyor"

            # Cleanup temp files
            rm -f /root/bot.tar.gz /root/frontend.tar.gz /root/backend.tar.gz

            echo "🎉 NeuroViaBot deploy tamamlandı!"

      # ==========================================
      # CLEANUP
      # ==========================================
      - name: 🧹 Cleanup
        run: rm -f bot.tar.gz frontend.tar.gz backend.tar.gz