name: 🤖 Deploy Bot Only

on:
  push:
    branches:
      - main
    paths:
      - 'index.js'
      - 'src/**'
      - 'package.json'
      - 'package-lock.json'
      - '.github/workflows/deploy-bot.yml'
  workflow_dispatch: # Manuel deployment

jobs:
  deploy-bot:
    name: 🤖 Deploy Discord Bot
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Pull Latest Bot Code
        uses: appleboy/ssh-action@v1.0.3
        continue-on-error: true
        id: pull_code_attempt1
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: ${{ secrets.VPS_PORT }}
          command_timeout: 30m
          script: |
            echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
            echo "📥 BOT: Pulling Latest Changes"
            echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
            cd /root/neuroviabot/bot
            git fetch origin main
            git reset --hard origin/main
            git clean -fd
            echo "✅ Bot code updated"
            echo ""

      - name: 📥 Pull Latest Bot Code (Retry)
        if: steps.pull_code_attempt1.outcome == 'failure'
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: ${{ secrets.VPS_PORT }}
          command_timeout: 30m
          script: |
            echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
            echo "🔄 BOT: Retrying Pull (Attempt 2)"
            echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
            cd /root/neuroviabot/bot
            git fetch origin main
            git reset --hard origin/main
            git clean -fd
            echo "✅ Bot code updated (retry successful)"
            echo ""

      - name: 🗑️ Clean Bot Dependencies
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: ${{ secrets.VPS_PORT }}
          command_timeout: 30m
          script: |
            echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
            echo "🗑️ BOT: Cleaning Dependencies"
            echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
            cd /root/neuroviabot/bot
            rm -rf node_modules package-lock.json
            echo "✅ Dependencies cleaned"
            echo ""

      - name: 📦 Install Bot Dependencies
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: ${{ secrets.VPS_PORT }}
          command_timeout: 30m
          script: |
            echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
            echo "📦 BOT: Installing Dependencies"
            echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
            cd /root/neuroviabot/bot
            npm install --production
            echo "✅ Dependencies installed"
            echo ""

      - name: 🔄 Restart Bot Service
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: ${{ secrets.VPS_PORT }}
          command_timeout: 30m
          script: |
            echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
            echo "🔄 PM2: Restarting Bot"
            echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
            pm2 restart neuroviabot --update-env
            pm2 save
            echo "⏳ Waiting for bot to start..."
            sleep 5
            echo "✅ Bot restarted and saved"
            echo ""

      - name: ✅ Verify Bot Status
        continue-on-error: true
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: ${{ secrets.VPS_PORT }}
          command_timeout: 30m
          script: |
            echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
            echo "✅ BOT DEPLOYMENT COMPLETED!"
            echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
            echo ""
            echo "📊 Bot Status:"
            pm2 status neuroviabot || true
            echo ""
            echo "📋 Recent Logs:"
            pm2 logs neuroviabot --lines 15 --nostream || true
            echo ""
            echo "🎉 Bot is running!" || true

      - name: 📊 Deployment Summary
        if: always()
        run: |
          echo "### 🤖 Bot Deployment Completed!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Component | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|-----------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| 🤖 Discord Bot | ✅ Deployed |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Branch:** main" >> $GITHUB_STEP_SUMMARY
          echo "**Commit:** \`${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
          echo "**Deployed by:** @${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
          echo "**Time:** $(date -u '+%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_STEP_SUMMARY

