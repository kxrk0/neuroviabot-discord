version: '3.8'

services:
  # Frontend - Next.js Application
  frontend:
    build:
      context: ./neuroviabot-frontend
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_APP_NAME: NeuroVia
        NEXT_PUBLIC_APP_URL: http://localhost:3001
        NEXT_PUBLIC_API_URL: http://localhost:3000/api
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_APP_NAME=NeuroVia
      - NEXT_PUBLIC_APP_URL=http://localhost:3001
      - NEXT_PUBLIC_API_URL=http://localhost:3000/api
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - neuroviabot-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3001/api/health', (r) => process.exit(r.statusCode === 200 ? 0 : 1))"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 40s

  # Backend - Discord Bot & API
  backend:
    build:
      context: ./neuroviabot-backend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DATABASE_URL=postgresql://neuroviabot:password@postgres:5432/neuroviabot
      - REDIS_URL=redis://redis:6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - neuroviabot-network
    volumes:
      - ./neuroviabot-backend/logs:/app/logs

  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=neuroviabot
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=neuroviabot
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./neuroviabot-backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    networks:
      - neuroviabot-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U neuroviabot"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data
    restart: unless-stopped
    networks:
      - neuroviabot-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    networks:
      - neuroviabot-network

networks:
  neuroviabot-network:
    driver: bridge

volumes:
  postgres-data:
    driver: local
  redis-data:
    driver: local
