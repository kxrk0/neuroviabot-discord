'use client';

import React, { useState } from 'react';
import { MagnifyingGlassIcon } from '@heroicons/react/24/outline';

const EMOJI_CATEGORIES = {
  'Y√ºzler': ['üòÄ', 'üòÉ', 'üòÑ', 'üòÅ', 'üòÜ', 'üòÖ', 'ü§£', 'üòÇ', 'üôÇ', 'üôÉ', 'üòâ', 'üòä', 'üòá', 'ü•∞', 'üòç', 'ü§©', 'üòò', 'üòó', 'üòö', 'üòô'],
  'Jestler': ['üëç', 'üëé', 'üëä', '‚úä', 'ü§õ', 'ü§ú', 'ü§û', '‚úåÔ∏è', 'ü§ü', 'ü§ò', 'üëå', 'ü§å', 'ü§è', 'üëà', 'üëâ', 'üëÜ', 'üëá', '‚òùÔ∏è', '‚úã', 'ü§ö'],
  'Kalpler': ['‚ù§Ô∏è', 'üß°', 'üíõ', 'üíö', 'üíô', 'üíú', 'üñ§', 'ü§ç', 'ü§é', 'üíî', '‚ù£Ô∏è', 'üíï', 'üíû', 'üíì', 'üíó', 'üíñ', 'üíò', 'üíù', 'üíü'],
  'Hayvanlar': ['üê∂', 'üê±', 'üê≠', 'üêπ', 'üê∞', 'ü¶ä', 'üêª', 'üêº', 'üê®', 'üêØ', 'ü¶Å', 'üêÆ', 'üê∑', 'üê∏', 'üêµ', 'üêî', 'üêß', 'üê¶', 'üê§', 'ü¶Ü'],
  'Yiyecek': ['üçé', 'üçä', 'üçã', 'üçå', 'üçâ', 'üçá', 'üçì', 'ü´ê', 'üçà', 'üçí', 'üçë', 'ü•≠', 'üçç', 'ü••', 'ü•ù', 'üçÖ', 'üçÜ', 'ü•ë', 'ü•¶', 'ü•¨'],
  'Aktivite': ['‚öΩ', 'üèÄ', 'üèà', '‚öæ', 'ü•é', 'üéæ', 'üèê', 'üèâ', 'ü•è', 'üé±', 'ü™Ä', 'üèì', 'üè∏', 'üèí', 'üèë', 'ü•ç', 'üèè', 'ü™É', 'ü•Ö', '‚õ≥'],
  'Nesneler': ['‚åö', 'üì±', 'üíª', '‚å®Ô∏è', 'üñ•Ô∏è', 'üñ®Ô∏è', 'üñ±Ô∏è', 'üñ≤Ô∏è', 'üïπÔ∏è', 'üóúÔ∏è', 'üíæ', 'üíø', 'üìÄ', 'üìº', 'üì∑', 'üì∏', 'üìπ', 'üé•', 'üìû', '‚òéÔ∏è'],
  'Semboller': ['‚ù§Ô∏è', 'üíî', 'üíØ', 'üí¢', 'üí•', 'üí´', 'üí¶', 'üí®', 'üï≥Ô∏è', 'üí¨', 'üëÅÔ∏è‚Äçüó®Ô∏è', 'üó®Ô∏è', 'üóØÔ∏è', 'üí≠', 'üí§', '‚≠ê', 'üåü', '‚ú®', '‚ö°', 'üî•'],
};

interface EmojiPickerProps {
  onSelect: (emoji: string) => void;
  value?: string;
}

export default function EmojiPicker({ onSelect, value }: EmojiPickerProps) {
  const [searchTerm, setSearchTerm] = useState('');
  const [selectedCategory, setSelectedCategory] = useState<string>(Object.keys(EMOJI_CATEGORIES)[0]);

  const allEmojis = Object.values(EMOJI_CATEGORIES).flat();
  const filteredEmojis = searchTerm
    ? allEmojis
    : EMOJI_CATEGORIES[selectedCategory as keyof typeof EMOJI_CATEGORIES] || [];

  return (
    <div className="space-y-3">
      {/* Search */}
      <div className="relative">
        <MagnifyingGlassIcon className="absolute left-3 top-1/2 -translate-y-1/2 w-4 h-4 text-gray-400" />
        <input
          type="text"
          value={searchTerm}
          onChange={(e) => setSearchTerm(e.target.value)}
          placeholder="Emoji ara..."
          className="w-full pl-9 pr-4 py-2 bg-[#23272f] border border-white/10 rounded-lg text-white text-sm placeholder-gray-500 focus:border-blue-500 focus:outline-none"
        />
      </div>

      {/* Categories */}
      {!searchTerm && (
        <div className="flex gap-1 overflow-x-auto pb-2">
          {Object.keys(EMOJI_CATEGORIES).map((category) => (
            <button
              key={category}
              onClick={() => setSelectedCategory(category)}
              className={`px-3 py-1.5 rounded-lg text-xs font-medium whitespace-nowrap transition ${
                selectedCategory === category
                  ? 'bg-blue-500 text-white'
                  : 'bg-[#23272f] text-gray-400 hover:text-white'
              }`}
            >
              {category}
            </button>
          ))}
        </div>
      )}

      {/* Emoji Grid */}
      <div className="grid grid-cols-8 gap-2 max-h-64 overflow-y-auto p-2 bg-[#23272f] rounded-lg border border-white/10">
        {filteredEmojis.map((emoji, index) => (
          <button
            key={index}
            onClick={() => onSelect(emoji)}
            className={`text-2xl p-2 rounded hover:bg-white/10 transition ${
              value === emoji ? 'bg-blue-500/20 ring-2 ring-blue-500' : ''
            }`}
            title={emoji}
          >
            {emoji}
          </button>
        ))}
      </div>

      {/* Selected Preview */}
      {value && (
        <div className="flex items-center gap-2 p-2 bg-[#23272f] rounded-lg border border-white/10">
          <span className="text-2xl">{value}</span>
          <span className="text-sm text-gray-400">Se√ßili</span>
        </div>
      )}
    </div>
  );
}

