// ==========================================
// ðŸŽ¨ NeuroViaBot - Card Components
// ==========================================

@use '../abstracts/variables' as *;
@use '../abstracts/mixins' as *;
@use 'sass:map';

.card {
  @include card;
  
  // Hover effect
  &-hover {
    @include card-hover;
  }
  
  // Glass effect
  &-glass {
    @include card-glass;
  }
  
  // Gradient border
  &-gradient-border {
    position: relative;
    background: $color-bg-secondary;
    border: none;
    
    &::before {
      content: '';
      @include absolute-fill;
      border-radius: map.get($radius, 'lg');
      padding: 2px;
      background: $gradient-cyber;
      -webkit-mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
      mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
      -webkit-mask-composite: xor;
      mask-composite: exclude;
    }
  }
  
  // Glow card
  &-glow {
    @include glow-on-hover;
  }
  
  // Elevated card
  &-elevated {
    background: $color-bg-elevated;
    box-shadow: map.get($shadows, 'lg');
    
    &:hover {
      box-shadow: map.get($shadows, 'xl');
      transform: translateY(-4px);
    }
  }
  
  // Interactive card
  &-interactive {
    cursor: pointer;
    transition: all map.get($transition-speeds, 'medium') map.get($transition-easings, 'smooth');
    
    &:hover {
      transform: translateY(-4px) scale(1.02);
      box-shadow: map.get($shadows, 'xl');
      
      .card-title {
        color: $color-primary;
      }
    }
    
    &:active {
      transform: translateY(-2px) scale(1.01);
    }
  }
  
  // 3D card effect
  &-3d {
    transform-style: preserve-3d;
    transition: transform map.get($transition-speeds, 'medium') map.get($transition-easings, 'smooth');
    
    &:hover {
      transform: perspective(1000px) rotateX(5deg) rotateY(5deg) translateY(-8px);
    }
  }
  
  // Header
  &-header {
    padding: map.get($spacing, 'lg');
    border-bottom: 1px solid $color-border-primary;
  }
  
  // Body
  &-body {
    padding: map.get($spacing, 'lg');
  }
  
  // Footer
  &-footer {
    padding: map.get($spacing, 'lg');
    border-top: 1px solid $color-border-primary;
    background: rgba(0, 0, 0, 0.2);
  }
  
  // Title
  &-title {
    font-size: map.get($font-sizes, 'xl');
    font-weight: map.get($font-weights, 'bold');
    color: $color-text-primary;
    margin-bottom: map.get($spacing, 'sm');
    transition: color map.get($transition-speeds, 'base') map.get($transition-easings, 'smooth');
  }
  
  // Description
  &-description {
    font-size: map.get($font-sizes, 'base');
    color: $color-text-secondary;
    line-height: map.get($line-heights, 'relaxed');
  }
  
  // Image
  &-image {
    width: 100%;
    height: 200px;
    object-fit: cover;
    border-radius: map.get($radius, 'lg') map.get($radius, 'lg') 0 0;
  }
}

// Feature Card
.feature-card {
  @include card;
  @include card-hover;
  position: relative;
  overflow: hidden;
  text-align: center;
  
  // Animated background
  &::before {
    content: '';
    @include absolute-fill;
    background: $gradient-cyber;
    opacity: 0;
    transition: opacity map.get($transition-speeds, 'medium') map.get($transition-easings, 'smooth');
    z-index: -1;
  }
  
  &:hover::before {
    opacity: 0.1;
  }
  
  &-icon {
    @include flex-center;
    width: 64px;
    height: 64px;
    margin: 0 auto map.get($spacing, 'lg');
    background: $gradient-cyber;
    border-radius: map.get($radius, 'xl');
    transition: all map.get($transition-speeds, 'medium') map.get($transition-easings, 'bounce');
    
    .feature-card:hover & {
      transform: scale(1.1) rotate(5deg);
      @include glow($color-primary, 0.6);
    }
  }
}

// Stat Card
.stat-card {
  @include card;
  position: relative;
  overflow: hidden;
  
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 4px;
    height: 100%;
    background: $gradient-cyber;
  }
  
  &-value {
    font-size: map.get($font-sizes, '4xl');
    font-weight: map.get($font-weights, 'bold');
    @include text-gradient;
    margin-bottom: map.get($spacing, 'xs');
  }
  
  &-label {
    font-size: map.get($font-sizes, 'sm');
    color: $color-text-secondary;
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }
  
  &-trend {
    display: inline-flex;
    align-items: center;
    gap: map.get($spacing, 'xs');
    font-size: map.get($font-sizes, 'sm');
    margin-top: map.get($spacing, 'sm');
    
    &.positive {
      color: $color-accent-green;
    }
    
    &.negative {
      color: $color-accent-red;
    }
  }
}


